name: 'Publish to S3'
description: 'Publish artifacts to S3 bucket'
inputs:
  disable_lock:
    description: Disabled locking, for stuff that won't need one, like Windows MSIs.
    required: false
    default: "false"
  run_id:
    description: Action run identifier. To be provisioned from env-var `GITHUB_RUN_ID`.
    required: false
  aws_s3_lock_bucket_name:
    description: Name of the S3 bucket for lockfiles
    required: false
  aws_region:
    description: AWS region for the buckets.
    required: false
  aws_role_arn:
    description: ARN for the IAM role to be used for fetching AWS STS credentials.
    required: true
  aws_secret_access_key:
    description: AWS secret access key
    required: true
  aws_access_key_id:
    description: AWS access key id
    required: true
  aws_s3_bucket_name:
    description: Name of the S3 bucket
    required: true
  repo_name:
    description: Combination of organization and repository (i.e. newrelic/nri-redis)
    required: true
  app_name:
    description: Name of the package (i.e. nri-redis)
    required: true
  tag:
    description: Tag pointing to the release
    required: true
  schema:
    description: Name of the schema describing the packages to be published (i.e. infra-agent, ohi, nrjmx, custom - requires schemaUrl)
    required: true
  schema_url:
    description: Url to custom schema file
    required: false
  env:
    description: Type of environment (release, pre-release)
    required: true
  gpg_passphrase:
    description: Passphrase for the gpg key
    required: false
  gpg_private_key_base64:
    description: Encoded gpg key
    required: true
runs:
  using: "docker"
  image: "Dockerfile"
  args:
    - "${{ inputs.disable_lock }}"
    - "${{ inputs.run_id }}"
    - "${{ inputs.aws_s3_lock_bucket_name }}"
    - "${{ inputs.aws_region }}"
    - "${{ inputs.aws_role_arn }}"
    - "${{ inputs.aws_secret_access_key }}"
    - "${{ inputs.aws_access_key_id }}"
    - "${{ inputs.aws_s3_bucket_name }}"
    - "${{ inputs.repo_name }}"
    - "${{ inputs.app_name }}"
    - "${{ inputs.tag }}"
    - "${{ inputs.schema }}"
    - "${{ inputs.schema_url }}"
    - "${{ inputs.env }}"
    - "${{ inputs.gpg_passphrase }}"
    - "${{ inputs.gpg_private_key_base64}}"


name: 'Publish to S3'
description: 'Publish artifacts to S3 bucket'
inputs:
  disable_lock:
    description: Disabled locking, for stuff that won't need one, like Windows MSIs.
    required: false
    default: "false"
  lock_retries:
    description: Retries amount when repo is busy. Retry backoff is 1 minute.
    required: false
    default: "30"
  run_id:
    description: Action run identifier. To be provisioned from env-var `GITHUB_RUN_ID`.
    required: false
  aws_s3_lock_bucket_name:
    description: Name of the S3 bucket for lockfiles
    required: false
  aws_role_session_name:
    description: Name of the S3 role session name
    required: false
  aws_region:
    description: AWS region for the buckets.
    required: false
  aws_role_arn:
    description: ARN for the IAM role to be used for fetching AWS STS credentials.
    required: true
  aws_secret_access_key:
    description: AWS secret access key
    required: true
  aws_access_key_id:
    description: AWS access key id
    required: true
  aws_s3_bucket_name:
    description: Name of the S3 bucket
    required: true
  repo_name:
    description: Combination of organization and repository (i.e. newrelic/nri-redis)
    required: true
  app_name:
    description: Name of the package (i.e. nri-redis)
    required: true
  app_version:
    description: Version of the package. If not present is extracted from the tag removing trailing v (i.e tag=v1.0.1 -> version=1.0.1)
    required: false
  tag:
    description: Tag pointing to the release
    required: true
  access_point_host:
    description: Http host to use and AP for .repo files in YUM/ZYPP repos
    required: false
  schema:
    description: Name of the schema describing the packages to be published (i.e. infra-agent, ohi, nrjmx, custom - requires schema_url, custom-local - requires schema_path)
    required: true
  schema_url:
    description: Url to custom schema file
    required: false
  schema_path:
    description: Path to custom schema file
    required: false
  gpg_passphrase:
    description: Passphrase for the gpg key
    required: false
  gpg_private_key_base64:
    description: Encoded gpg key
    required: true
  local_packages_path:
    description: local path when packages are already present (/srv is the root of the project inside the docker container)
    required: false
  dest_prefix:
    description: s3 path prefix
    required: false
    default: "infrastructure_agent/"
  apt_skip_mirror:
    description: skip mirroring apt repo
    required: false
  fastly_api_key:
    description: Fastly API key
    required: false
  fastly_purge_tag:
    description: Fastly | Tag associated with resources to purge. If not set, will be "purge_all"
    required: false
  fastly_aws_bucket:
    description: Fastly | AWS bucket to check for replication status
    required: false
  fastly_aws_region:
    description: Fastly | AWS region to check for replication status
    required: false
  fastly_aws_attempts:
    description: Fastly | AWS replication status check retries. Replication takes some time, so we need to wait and retry.
    required: false
  fastly_timeout_s3:
    description: Fastly | AWS replication status check retries timeout
    required: false
  fastly_timeout_cdn:
    description: Fastly | Cache cleaning api call timeout
    required: false
runs:
  using: "composite"
  steps:
    - run: ${{ github.action_path }}/action-run.sh
      shell: bash
      env:
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws_secret_access_key }}
        AWS_ACCESS_KEY_ID: ${{ inputs.aws_access_key_id }}
        AWS_S3_BUCKET_NAME: ${{ inputs.aws_s3_bucket_name }}
        GPG_PASSPHRASE: ${{ inputs.gpg_passphrase }}
        GPG_PRIVATE_KEY_BASE64: ${{ inputs.gpg_private_key_base64}}
        REPO_NAME: ${{ inputs.repo_name }}
        APP_NAME: ${{ inputs.app_name }}
        APP_VERSION: ${{ inputs.app_version }}
        TAG: ${{ inputs.tag }}
        ACCESS_POINT_HOST: ${{ inputs.access_point_host }}
        SCHEMA: ${{ inputs.schema }}
        SCHEMA_URL: ${{ inputs.schema_url }}
        SCHEMA_PATH: ${{ inputs.schema_path }}
        RUN_ID: ${{ inputs.run_id }}
        AWS_S3_LOCK_BUCKET_NAME: ${{ inputs.aws_s3_lock_bucket_name }}
        AWS_REGION: ${{ inputs.aws_region }}
        AWS_ROLE_ARN: ${{ inputs.aws_role_arn }}
        DISABLE_LOCK: ${{ inputs.disable_lock }}
        AWS_ROLE_SESSION_NAME: ${{ inputs.aws_role_session_name }}
        LOCAL_PACKAGES_PATH: ${{ inputs.local_packages_path }}
        DEST_PREFIX: ${{ inputs.dest_prefix }}
        FASTLY_API_KEY: ${{ inputs.fastly_api_key }}
        FASTLY_PURGE_TAG: ${{ inputs.fastly_purge_tag }}
        FASTLY_AWS_BUCKET: ${{ inputs.fastly_aws_bucket }}
        FASTLY_AWS_REGION: ${{ inputs.fastly_aws_region }}
        FASTLY_AWS_ATTEMPTS: ${{ inputs.fastly_aws_attempts }}
        FASTLY_TIMEOUT_S3: ${{ inputs.fastly_timeout_s3 }}
        FASTLY_TIMEOUT_CDN: ${{ inputs.fastly_timeout_cdn }}
